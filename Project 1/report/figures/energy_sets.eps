%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.55.0 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 8.5.0.197613 \\(R2015a\\). Operating System: Windows 8)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 205 142
%%HiResBoundingBox: 0 0 204.5 141.5
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font KQYYKF+Helvetica
%!FontType1-1.0: KQYYKF+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2014 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2014 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans) readonly def
/FamilyName (Nimbus Sans) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /KQYYKF+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -218 762 732] readonly def
/StrokeWidth 0 def
/UniqueID 5020902 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 66 /B put
dup 68 /D put
dup 69 /E put
dup 98 /b put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF302EAFC179F06E5D11CA91CAEA8FCFBD092B731BA50E976C
F2D1A3FF361A646D1AB184595395D06D0878AE6DA2830430C83E8A6F61D9C1AB
323A763E8DCB87DED77B64ECD6E54D27713CBE688F97C3D0D572DE54533F350A
3DFCA7EDEBD95AC766ADE5153675C5188AAEAAC295EE1E07041BDE7CBE4F96C4
393685A9B1F17EF1110C359F3C15300C3E5A424567F89B122A80B7BD68B294BD
3276514B19C2AB6F60DCCD1409A1215C07DDF21CA246CA320831DF38517FB68F
96069CA19A58B4814EA1814E265CB5B04F7EF82159B82B80E144758116918499
27BDD5E093E6ABE98A4D3F43663346D2BF5AF9428B6B6F64E9937EC50EDCA605
48705043D9FB224B3A1B91A45ADB11958D4EA919CAFE184DBE4F04BD34446485
4F12CEA807FF0AABC902D3FBAC7F42808CC44611D5D6F0AC86A2928AAB5D6077
60F264A3D980AD5F8E1C2EC15FCF2B1AF64C45258EEC43883E09393D01ACB929
FE51AB32AB05A0B18489E4379E78C0D5AE9647E86E1544C98E1CF0A41B5B5A74
9EEF5F0E86DF9C009D32AB5A56CB008CB8C63F2D2E6C989ABCEF00AE8335AB1E
425627190A587A3325EE45BB0ABCE96AB15B44B5BBEB46CBE047E0B2229D775B
ED9B325E087228F25207D1B31A74C9B542A7F2D2A01F37C9883416C7EDDA73C6
60D972BF564DD8BEAE1CF34F08523AA5CAFBD7E848AFED706242F5B24F59538B
E8E83E91052DFBD04EE853CBE6F1FED4BF5FF8A93887280C056F73DE5B138829
3E0AA33F5C7E964E595978ADCC920A0B43D2160CFE06057006126BF1672A1947
6B748EC1373B74044EB6F3A999EE17250E54118AE05562C04C5A86AF2989A256
ABF640D98F57A3092A6C5BDA708315F454CAEFD444F039ADBDCFE089649483EA
D2953CFB43C64503E96712D9E05F044FA183318B328F9DAFCBD1A271FCDA14E5
0E9E83D4F51996E78D21EAF719523E48C8AAA5876260D7C7BE9D2842BF6E8C89
DC7DC4082E9EC8D1A8C3E38A4D9BE9D58435514F8D61D6094DC7DE5F26E22CCB
E6CD63D565977D69314789E2ED03005999E0D2A5E13C1E2CAA8DDCB294A7E10B
FA119098D50FC3CC887F1B0CE7EEF4606FDB40F3785EB491F543A9854B3B9434
8A29DAE12F2CFA6642CF7940380A94E8B00B1E53A5B08A046BCAD68C789406BA
214039793AD8A58A5792771AC653E2A9D6E8B876A4134512DF7180A022216814
B722D61CB14ED5010B8639D5933CB080735AEF47AAD67A1F2299C96FBF2AD3A0
7110EAE602D817CE437F789C8CBF6AF0D4883AC25DF8E6A814160C2E4786F10D
2B60A85B5E2BBC663E9099762AA9B0252E9FC6FF7D4EF54049B7EC856F5F3881
7037B27A4320075B1B70046723ED67F771BE37BDCDE222AEA266BE10E0D2A7EE
8D4017F0A1CDB032DD908CF54B6C8E414EB1A1DDF2A4D6607A615A78524F7BE5
68BE66EBCF15CA218E36AC8B214C889F9DDDC1F27A8CEBBB2495BFB726773EB5
863C068B974CA82F4B7AE07841ACE75581C843E5AB0E08F5A88361CFFF41A796
EF6258297671E6789E3AD9BB5D827EEAEEF85DCE049B9D7C286DC24D85AB2BE0
14A517A5C00F22E73CFFF7556632B1F70A22B5883A58711FD6817922CC2D57A9
EDFE5BBF700C01F68D8F898A6CB3FBEC0C9252A854170376F1F77C6DA77BB613
C32B9F3A4C91882108DF5374B374838CB8E37663F84224745ADEBB5E12EEF419
D1D556845B8FE9FEA3BDA597B89F0240C5C8A0086C0EDC3F2DDFE0E54E7D43B5
5CAB56BEAF5264F81417D82BB70368DB9542F998AB6DB1307EC77F7DB6D09669
548300045E8F5923FF351E67AFD25E8CB7C196ED9892F7ADABDD5B684BEDBED1
4476A6090274330AA64C6A798548CDE0DB0464C7C3C6C48665C0476EC89E603D
BFBC50E9EBA80DC2F62A985FE1016172BFD8BBF4CC19D5383B37324FD341AAF5
953926A47D7AEEA76AD4D89A10A340CC2E1FEF92BE79B46DB5657CC39CD8AC7E
DBE6F724E45935DE33F8150ADD1ADCC87D5ACC162E14EB349C1193C246627BD4
B043761074856DB615ED37C02A8B24D4F8C2705D000062AD150FDFD1C2263AE1
8403A6A0C568B6F9668A4E003E1CD57F473D9990B8E9299B1B3B328EE759F7D4
F08D00DAEBE1EC0E0D904CD24D914B8049FC9F61C0BE2DC6A381CBAA2B1087DA
F7CA456008F1F4081C027E20EEFD46069112E0F26E245D9BE10DA8C88C9CFC49
19F201E799854C731E87461DBEBBB2804566AFF90579758A8BFB0AFA57217A7D
F2EA840086D4E2A5007D2E1438E9C1013BFD9A22D2084245CC5903C5C536D423
A9BF4153B189B232204E49598B376657F5517715AA8D2B5A7D5BD144C10AB518
EF65AFCF22B5DB96261EFA1EDAB003082CE6ABC065F44BC789989B151464A419
1B0938E2A84621F74F1D14C375D9B703C4E0F3B97181E7FFD1850D0BCF9A4222
2050070F7080C5CF5DAC66AFAC7FD4A13236ABE28729025EBB6E4E9F579A0BA2
C3D450A17500728F9EC24F541D86424024FB13EEA17D7E75CF4D93F1C9248E47
8112CACD52D5FC064B28985A9D37F69D362D28F1AEE450C21ECA33543CD88CE8
016A2D65E9D3AF6ACD5B3B62E0A4A7C3C25725837DD2A464B7AFEA1F49B345C1
476419AAB4B01C0C4A8D211FC09578D0A22C582E72B32CC7F7A85C5D3760C2C8
B28B528256DF29B4ED1025C62540C08D2A7C62CCAF94A1F0ABB12D363F1F8E15
8D702ED1FDA5452EDDA375D4FF57117BCDAD6EABA5A56297B59F5C207F0EA432
D4DE32821016A73E24359423C4179DF458FA0A50385B39781C169A514244CC21
DAF008166D12879A742E209A5EDCB0F9D461CF09B8E9BA4060F0A5D4B0226D8A
835265177ED9BFE95A0FA1655987AEF429832775C172320DAEE8EAF863DD6289
1AE4918D118C7F648835E503434E60333C7C778E111DAE2B488F5D5AC3F01F46
D57450FF01581DA3A4E84394C753DAA8FDF069E9142117344D2E85C889B047D4
1BCB2AB65BA5DDC2C478066111FCEDB13D3E0C0B22ABF6DA3543D72460778793
60D258FC725E8D282291E077381D7C805D8145C001D8EBB83BB7B848D7BCC766
8BC3BBC74214549D11885E3253842283587A3C79056C164C433E775CF07184C3
5E7E6786182777B4711C116432C47D898BE0BAB28FD76EBCE7A042C58E71BCA9
AE5C85FC0002B1E72EEE9270788616A6E208BF4E2825DDAFCB7D815617A079C3
226F17CD6786BC174B5B5758810858C134AD0296C8C3B0F2AF955DD0F94B98FC
3B808CB8A98969344FFAE974BAA568B8178B515F20539BE2358ABBB7B5E6C245
ED5E0695BE9B0B8A2FDDCD4B744F74C85953BCAC42E4EAFB16901091F929480E
C5EB7811A43A57140160833272C0E49C41FDC6276C056B8664397D9A5D89E2B5
29A39C90279B9EC009C8A9237F50E0A732B9192D2467FA136A839A70B9A00392
6797858C868F6831C5C37513AA41FD1195435CFD3BEB734BECDC221FF6CD56AD
A433E787DE81971E9080BC6CED77919F39EAB8F3EA7EF3A53192478D740FF35D
BBA54D11C80B3FE96D46361C28C52AE957C30A9B8AC251EAA8AEFA3F2E843D10
A1E1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /KQYYKF+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 204.5 141.5 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[1] sc
-20 17.5 2250 1500 re
f
-20 17.5 2250 1500 re
f
317.5 325 1702.5 1080 re
f
/DeviceGray {} cs
[0.1489] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 101.125 4] Tm
0 0 Td
/F8_0 9.75 Tf
(Energy)
[6.50325
0
5.421
0
5.421
0
3.24675
0
5.421
0
4.875
0] Tj
Q
5.0025 w
2 J
1 j
/DeviceGray {} CS
[0.1489] SC
317.5 325 m
2020 325 l
S
317.5 1405 m
2020 1405 l
S
317.5 325 m
317.5 342.477 l
S
925.531 325 m
925.531 342.477 l
S
1533.57 325 m
1533.57 342.477 l
S
317.5 1405 m
317.5 1387.52 l
S
925.531 1405 m
925.531 1387.52 l
S
1533.57 1405 m
1533.57 1387.52 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 28.75 18] Tm
0 0 Td
/F8_0 9.75 Tf
(0)
[5.421
0] Tj
-5141.8 TJm
(500)
[5.421
0
5.421
0
5.421
0] Tj
-4299.03 TJm
(1000)
[5.421
0
5.421
0
5.421
0
5.421
0] Tj
[0 1 -1 0 8.5 36.625] Tm
0 0 Td
/F8_0 9.75 Tf
(Degree of membership)
[7.0395
0
5.421
0
5.421
0
3.24675
0
5.421
0
5.421
0
2.7105
0
5.421
0
2.7105
0
2.7105
0
8.12175
0
5.421
0
8.12175
0
5.421
0
5.421
0
3.24675
0
4.875
0
5.421
0
2.1645
0
5.421
0] Tj
Q
317.5 325 m
317.5 1405 l
S
2020 325 m
2020 1405 l
S
317.5 415 m
334.977 415 l
S
317.5 865 m
334.977 865 l
S
317.5 1315 m
334.977 1315 l
S
2020 415 m
2002.52 415 l
S
2020 865 m
2002.52 865 l
S
2020 1315 m
2002.52 1315 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 21.75 37.375] Tm
0 0 Td
/F8_0 9.75 Tf
(0)
[5.421
0] Tj
-8.25 45 Td
(0.5)
[5.421
0
2.7105
0
5.421
0] Tj
0 90 Td
(1)
[5.421
0] Tj
Q
7.5 w
0 J
2 j
/DeviceRGB {} CS
[0 0.447 0.7402] SC
317.5 415 m
326.957 1051.36 l
336.414 1280.55 l
345.871 1221.72 l
355.328 1162.9 l
364.797 1104.08 l
374.254 1045.25 l
383.711 986.426 l
393.168 927.602 l
402.625 868.781 l
412.082 809.957 l
421.539 751.137 l
430.996 692.313 l
440.453 633.488 l
449.922 574.668 l
459.379 515.836 l
468.836 457.016 l
478.293 415 l
487.75 415 l
497.207 415 l
506.664 415 l
516.121 415 l
525.578 415 l
535.047 415 l
544.504 415 l
553.961 415 l
563.418 415 l
572.875 415 l
582.332 415 l
591.789 415 l
601.246 415 l
610.703 415 l
620.172 415 l
629.629 415 l
639.086 415 l
648.543 415 l
658 415 l
667.457 415 l
676.914 415 l
686.371 415 l
695.828 415 l
705.297 415 l
714.754 415 l
724.211 415 l
733.668 415 l
743.125 415 l
752.582 415 l
762.039 415 l
771.496 415 l
780.953 415 l
S
780.953 415 m
1244.42 415 l
S
1244.42 415 m
1707.87 415 l
S
1707.87 415 m
2020 415 l
S
/DeviceRGB {} CS
[0.8516 0.3249 0.0979] SC
317.5 1315 m
326.957 678.641 l
336.414 415 l
780.953 415 l
S
780.953 415 m
1244.42 415 l
S
1244.42 415 m
1707.87 415 l
S
1707.87 415 m
2020 415 l
S
/DeviceRGB {} CS
[0.9297 0.6933 0.125] SC
317.5 415 m
326.957 415 l
336.414 449.453 l
345.871 508.277 l
355.328 567.102 l
364.797 625.922 l
374.254 684.746 l
383.711 743.574 l
393.168 802.398 l
402.625 861.219 l
412.082 920.043 l
421.539 978.863 l
430.996 1037.69 l
440.453 1096.51 l
449.922 1155.33 l
459.379 1214.16 l
468.836 1272.98 l
478.293 1312.02 l
487.75 1301.57 l
497.207 1291.12 l
506.664 1280.67 l
516.121 1270.23 l
525.578 1259.78 l
535.047 1249.33 l
544.504 1238.88 l
553.961 1228.43 l
563.418 1217.99 l
572.875 1207.54 l
582.332 1197.09 l
591.789 1186.64 l
601.246 1176.2 l
610.703 1165.75 l
620.172 1155.3 l
629.629 1144.85 l
639.086 1134.4 l
648.543 1123.95 l
658 1113.5 l
667.457 1103.06 l
676.914 1092.61 l
686.371 1082.16 l
695.828 1071.71 l
705.297 1061.27 l
714.754 1050.82 l
724.211 1040.37 l
733.668 1029.93 l
743.125 1019.48 l
752.582 1009.03 l
762.039 998.582 l
771.496 988.137 l
780.953 977.688 l
S
780.953 977.688 m
790.422 967.238 l
799.879 956.793 l
809.336 946.344 l
818.793 935.898 l
828.25 925.449 l
837.707 915.004 l
847.164 904.555 l
856.621 894.109 l
866.078 883.66 l
875.547 873.211 l
885.004 862.758 l
894.461 852.309 l
903.918 841.863 l
913.375 831.414 l
922.832 820.969 l
932.289 810.52 l
941.746 800.074 l
951.203 789.625 l
960.672 779.176 l
970.129 768.73 l
979.586 758.281 l
989.043 747.836 l
998.5 737.387 l
1007.96 726.941 l
1017.41 716.492 l
1026.87 706.047 l
1036.33 695.598 l
1045.8 685.148 l
1055.25 674.703 l
1064.71 664.254 l
1074.17 653.809 l
1083.63 643.359 l
1093.08 632.914 l
1102.54 622.465 l
1112 612.016 l
1121.45 601.57 l
1130.92 591.121 l
1140.38 580.676 l
1149.84 570.227 l
1159.29 559.773 l
1168.75 549.324 l
1178.21 538.879 l
1187.66 528.43 l
1197.12 517.984 l
1206.58 507.535 l
1216.05 497.086 l
1225.5 486.641 l
1234.96 476.191 l
1244.42 465.746 l
S
1244.42 465.746 m
1253.88 455.297 l
1263.33 444.852 l
1272.79 434.402 l
1282.25 423.953 l
1291.7 415 l
1301.17 415 l
1310.63 415 l
1320.09 415 l
1329.54 415 l
1339 415 l
1348.46 415 l
1357.91 415 l
1367.37 415 l
1376.83 415 l
1386.3 415 l
1395.75 415 l
1405.21 415 l
1414.67 415 l
1424.13 415 l
1433.58 415 l
1443.04 415 l
1452.5 415 l
1461.95 415 l
1471.42 415 l
1480.88 415 l
1490.34 415 l
1499.79 415 l
1509.25 415 l
1518.71 415 l
1528.16 415 l
1537.62 415 l
1547.08 415 l
1556.55 415 l
1566 415 l
1575.46 415 l
1584.92 415 l
1594.38 415 l
1603.83 415 l
1613.29 415 l
1622.75 415 l
1632.21 415 l
1641.67 415 l
1651.13 415 l
1660.59 415 l
1670.04 415 l
1679.5 415 l
1688.96 415 l
1698.41 415 l
1707.87 415 l
S
1707.87 415 m
2020 415 l
S
/DeviceRGB {} CS
[0.4939 0.1841 0.5566] SC
317.5 415 m
468.836 415 l
478.293 417.984 l
487.75 428.434 l
497.207 438.879 l
506.664 449.328 l
516.121 459.773 l
525.578 470.223 l
535.047 480.672 l
544.504 491.117 l
553.961 501.566 l
563.418 512.012 l
572.875 522.461 l
582.332 532.906 l
591.789 543.355 l
601.246 553.801 l
610.703 564.25 l
620.172 574.703 l
629.629 585.152 l
639.086 595.602 l
648.543 606.047 l
658 616.496 l
667.457 626.941 l
676.914 637.391 l
686.371 647.836 l
695.828 658.285 l
705.297 668.734 l
714.754 679.18 l
724.211 689.629 l
733.668 700.074 l
743.125 710.523 l
752.582 720.969 l
762.039 731.418 l
771.496 741.863 l
780.953 752.313 l
S
780.953 752.313 m
790.422 762.762 l
799.879 773.207 l
809.336 783.656 l
818.793 794.102 l
828.25 804.551 l
837.707 814.996 l
847.164 825.445 l
856.621 835.891 l
866.078 846.34 l
875.547 856.789 l
885.004 867.242 l
894.461 877.691 l
903.918 888.137 l
913.375 898.586 l
922.832 909.031 l
932.289 919.48 l
941.746 929.926 l
951.203 940.375 l
960.672 950.824 l
970.129 961.27 l
979.586 971.719 l
989.043 982.164 l
998.5 992.613 l
1007.96 1003.06 l
1017.41 1013.51 l
1026.87 1023.95 l
1036.33 1034.4 l
1045.8 1044.85 l
1055.25 1055.3 l
1064.71 1065.75 l
1074.17 1076.19 l
1083.63 1086.64 l
1093.08 1097.09 l
1102.54 1107.54 l
1112 1117.98 l
1121.45 1128.43 l
1130.92 1138.88 l
1140.38 1149.32 l
1149.84 1159.77 l
1159.29 1170.23 l
1168.75 1180.68 l
1178.21 1191.12 l
1187.66 1201.57 l
1197.12 1212.02 l
1206.58 1222.46 l
1216.05 1232.91 l
1225.5 1243.36 l
1234.96 1253.81 l
1244.42 1264.25 l
S
1244.42 1264.25 m
1253.88 1274.7 l
1263.33 1285.15 l
1272.79 1295.6 l
1282.25 1306.05 l
1291.7 1315 l
1301.17 1315 l
1310.63 1315 l
1320.09 1315 l
1329.54 1315 l
1339 1315 l
1348.46 1315 l
1357.91 1315 l
1367.37 1315 l
1376.83 1315 l
1386.3 1315 l
1395.75 1315 l
1405.21 1315 l
1414.67 1315 l
1424.13 1315 l
1433.58 1315 l
1443.04 1315 l
1452.5 1315 l
1461.95 1315 l
1471.42 1315 l
1480.88 1315 l
1490.34 1315 l
1499.79 1315 l
1509.25 1315 l
1518.71 1315 l
1528.16 1315 l
1537.62 1315 l
1547.08 1315 l
1556.55 1315 l
1566 1315 l
1575.46 1315 l
1584.92 1315 l
1594.38 1315 l
1603.83 1315 l
1613.29 1315 l
1622.75 1315 l
1632.21 1315 l
1641.67 1315 l
1651.13 1315 l
1660.59 1315 l
1670.04 1315 l
1679.5 1315 l
1688.96 1315 l
1698.41 1315 l
1707.87 1315 l
S
1707.87 1315 m
2020 1315 l
S
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 27.6418 131.875] Tm
0 0 Td
/F8_0 9.75 Tf
(B2)
[6.50325
0
5.421
0] Tj
1417.03 TJm
(B1)
[6.50325
0
5.421
0] Tj
-426.159 TJm
(B3)
[6.50325
0
5.421
0] Tj
-10806 TJm
(B4)
[6.50325
0
5.421
0] Tj
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font KQYYKF+Helvetica
%%EOF
