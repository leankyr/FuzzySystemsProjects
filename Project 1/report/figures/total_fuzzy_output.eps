%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.55.0 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 8.5.0.197613 \\(R2015a\\). Operating System: Windows 8)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 197 142
%%HiResBoundingBox: 0 0 196.25 141.5
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font LFLGQZ+Helvetica
%!FontType1-1.0: LFLGQZ+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2014 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2014 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans) readonly def
/FamilyName (Nimbus Sans) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /LFLGQZ+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -218 613 729] readonly def
/StrokeWidth 0 def
/UniqueID 5020902 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 53 /five put
dup 69 /E put
dup 101 /e put
dup 103 /g put
dup 110 /n put
dup 114 /r put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF302EAFC179F06E5D11CA91CAEA8FCFBD092B731BA50E976C
F2D1A3FF361A646D1AB184595395D06D0878AE6DA2830430C83E8A6F61D9C1AB
323A763E8DCB87DED77B64ECD6E54D27713CBE688F97C3D0D572DE54533F350A
3DFCA7EDEBD95AC766ADE5153675C5188AAEAAC295EE1E07041BDE7CBD9D202D
08D1DD39A93430C7A9F246CCC1FDF25F7C323966571919597AA20ABCD39A7A76
55C9D99D5960064A2D4F8133C007CC175280B2278091A099DE809742CD7DEB0A
F8D51702022E87C2809A1AC21E71040D0CC40EF4C7450EA2074032C66EB5983E
0279FD803E0F5267D6CC10055324752D3756E373480588C3CB686E9325C387C7
23805CB166370D86D3057E5C548152E41DA336069A6694F9C1CB0DE7ABA9DE74
26C31DB595216C30F437F526D5C408123552E8A570B7D000DC55B6ABE8858898
F1453287634D80AEA88FC849E166B062C84D044163171454266BCD93EF43DDED
9B6B5D5F6E93700A239659538A09E2605B20083DFEBBD6EB4CE7AECF8A36FC87
A9ED8A8C012728AA298B61337A96515032045A82AB585CB5DD809D5429AD2328
9F18B385E5A7DB9F280716606CDE1BD12FADF55FE851E7FA188227AC9D498E5B
C5C0589A02843A10781C2266C179B40BF043FF90DB56818E006120D556E3E3F4
8CC4490DEF6C5AEC85653EE25814264A9121247D4CF39359AF2EA053A474CE8B
459B95A8BE64D2E89F983E2F6044BC7BEFF1336CBA1D83278627590D47057CE6
3EB95C38AAE842D66A4EC02D87D1584178A2282646D9A9C40063B0064339C23F
333DBAF13CC1B524EB433813581CBD38FC43CA06AF50451A5360AD1D27EDFD79
70078F4639019BB093D486E1D3C9D9440816F00C391701644DFE6798BE7E7727
2D1720F89F90EBD155914E2E604E0D43DEDBADFDA0E6F2FF1D5E892E209EA16F
D7299ECB02624603244DB69519C9DC03632D1DCACDB0732E85084629556589DF
03072B3822D11CFFBD53BA08271F60F97855709D9BA01F4BE35D091DCE9935A6
E49AB5E53B6260EE3790E27527EDDF01764677A68441906239DA485F5B4AD4C3
D3D84AD21989B36D8DA87ED9AB71E46BAD8F1207B9EB36CF83F69D055386532D
3FCD5846D1D407328BB6022851A9DEA62A6BA218FD319BD9E613B34D63DAE012
DC31E0D9247EEEDE3932655BF1FB7D1A9E05C44386D3D171107A429321A8B052
0189D752511E8C71A02FF82255DBAF6881B879E715294AA2931B088FFFE73EEA
13B9783990E281E39E2160EE4188178FB4DCF9509DB16D3E8B460B29FA232398
33D5BDC207DDCDEA8C156484256EC37560FB2EA46F45EC995EA8C5BA285765B4
DAE1B6EC21DA3A47A5914DEE0BAAEF7E152D55A3D632C9A6D823D79A5009CDB0
9E833958D266C7E251CB9A86796A1EE806A6079B2E7A2F845CA447E3CAF4B461
37AA83D86F533EFB31E664935EF30B8601F7B334F785777BB8BC584304C3F2C1
2D0CCB3F5990F3FB8CF629A962E2304F1F491C46878CA51A6C57F619C0233619
D65FA98DDFFCB484F939C1478AD9267FC4B53A8DF7D6133BBF33405C8035665A
9508C06ACBCF076C1AD5BBC17BE58808A4F3F8AC858D76512E4270D7DCCD3C78
248748C55BEA491EAF74A24094A4D4EF
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /LFLGQZ+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 196.25 141.5 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[1] sc
-102.5 17.5 2250 1500 re
f
-102.5 17.5 2250 1500 re
f
190 347.5 1747.5 1057.5 re
f
/DeviceGray {} cs
[0.1489] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 88.375 4.75] Tm
0 0 Td
/F8_0 11.25 Tf
(Energy)
[7.50375
0
6.255
0
6.255
0
3.74625
0
6.255
0
5.625
0] Tj
Q
5.0025 w
2 J
1 j
/DeviceGray {} CS
[0.1489] SC
190 347.5 m
1937.5 347.5 l
S
190 1405 m
1937.5 1405 l
S
190 347.5 m
190 364.977 l
S
814.105 347.5 m
814.105 364.977 l
S
1438.22 347.5 m
1438.22 364.977 l
S
190 1405 m
190 1387.52 l
S
814.105 1405 m
814.105 1387.52 l
S
1438.22 1405 m
1438.22 1387.52 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 16 20.25] Tm
0 0 Td
/F8_0 9.75 Tf
(0)
[5.421
0] Tj
-5306.62 TJm
(500)
[5.421
0
5.421
0
5.421
0] Tj
-4463.89 TJm
(1000)
[5.421
0
5.421
0
5.421
0
5.421
0] Tj
Q
190 347.5 m
190 1405 l
S
1937.5 347.5 m
1937.5 1405 l
S
190 435.625 m
207.477 435.625 l
S
190 876.25 m
207.477 876.25 l
S
190 1316.88 m
207.477 1316.88 l
S
1937.5 435.625 m
1920.02 435.625 l
S
1937.5 876.25 m
1920.02 876.25 l
S
1937.5 1316.88 m
1920.02 1316.88 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 9 39.4375] Tm
0 0 Td
/F8_0 9.75 Tf
(0)
[5.421
0] Tj
-8.25 44.0625 Td
(0.5)
[5.421
0
2.7105
0
5.421
0] Tj
0 88.125 Td
(1)
[5.421
0] Tj
Q
7.5 w
0 J
2 j
/DeviceRGB {} CS
[0 0.447 0.7402] SC
190 566.176 m
193.504 532.879 l
197.004 608.648 l
200.508 695.164 l
204.012 774.184 l
207.512 766.188 l
211.016 758.191 l
214.516 750.191 l
218.012 742.195 l
221.516 734.199 l
225.016 726.203 l
228.52 718.203 l
232.023 710.207 l
235.523 702.211 l
239.027 694.219 l
242.531 686.215 l
246.031 678.219 l
249.535 670.227 l
253.039 662.223 l
256.539 654.227 l
260.043 646.234 l
263.547 638.238 l
267.047 630.234 l
270.543 622.238 l
274.047 614.246 l
277.547 606.25 l
281.051 598.246 l
284.551 590.254 l
288.055 582.258 l
291.559 574.262 l
295.059 566.262 l
298.563 558.266 l
302.066 550.27 l
305.566 542.266 l
309.07 534.273 l
312.574 531.289 l
316.074 534.363 l
319.578 537.445 l
323.074 540.52 l
326.574 543.602 l
330.078 546.676 l
333.578 549.754 l
337.082 552.836 l
340.586 555.91 l
344.086 558.992 l
347.59 562.066 l
351.094 565.141 l
354.594 565.816 l
358.098 565.27 l
361.602 564.723 l
S
361.602 564.723 m
365.102 564.176 l
368.605 563.629 l
372.109 563.078 l
375.602 562.531 l
379.105 561.992 l
382.609 561.445 l
386.109 560.898 l
389.613 560.352 l
393.113 559.801 l
396.617 559.254 l
400.121 558.707 l
403.621 558.16 l
407.125 557.613 l
410.629 557.074 l
414.129 556.523 l
417.633 555.977 l
421.137 555.43 l
424.637 554.883 l
428.141 554.336 l
431.637 553.789 l
435.137 553.238 l
438.641 552.691 l
442.141 552.145 l
445.645 551.605 l
449.148 551.059 l
452.648 550.512 l
456.152 549.961 l
459.656 549.414 l
463.156 552.477 l
466.66 556.164 l
470.164 559.855 l
473.664 563.547 l
477.168 567.234 l
480.672 570.926 l
484.164 574.613 l
487.668 578.305 l
491.172 581.996 l
494.672 585.684 l
498.176 589.375 l
501.676 593.066 l
505.18 596.754 l
508.684 600.445 l
512.184 604.137 l
515.688 607.824 l
519.191 611.516 l
522.691 615.203 l
526.195 618.895 l
529.699 622.586 l
533.199 626.273 l
S
533.199 626.273 m
536.695 629.965 l
540.199 633.656 l
543.699 637.344 l
547.203 641.035 l
550.703 644.727 l
554.207 648.414 l
557.711 652.113 l
561.211 655.801 l
564.715 659.492 l
568.219 663.184 l
571.719 666.871 l
575.223 670.563 l
578.727 674.254 l
582.227 677.941 l
585.73 681.633 l
589.227 685.324 l
592.727 689.012 l
596.23 692.703 l
599.734 696.391 l
603.234 700.082 l
606.738 703.773 l
610.238 707.461 l
613.742 711.152 l
617.246 714.844 l
620.746 718.531 l
624.25 722.223 l
627.754 725.914 l
631.254 729.602 l
634.758 733.293 l
638.262 736.984 l
641.754 740.672 l
645.258 744.363 l
648.762 748.051 l
652.262 751.742 l
655.766 755.434 l
659.266 759.121 l
662.77 762.813 l
666.273 766.504 l
669.773 770.191 l
673.277 773.883 l
676.781 777.574 l
680.281 781.27 l
683.785 784.961 l
687.289 788.648 l
690.789 792.34 l
694.285 796.031 l
697.789 799.719 l
701.289 803.41 l
704.793 807.102 l
S
704.793 807.102 m
708.297 810.789 l
711.797 814.48 l
715.301 818.172 l
718.801 821.859 l
722.305 825.551 l
725.809 829.238 l
729.309 832.93 l
732.813 836.621 l
736.316 840.309 l
739.816 844 l
743.32 847.691 l
746.816 851.379 l
750.316 855.07 l
753.82 858.762 l
757.324 862.449 l
760.824 866.141 l
764.328 869.828 l
767.828 873.52 l
771.332 877.211 l
774.836 880.898 l
778.336 884.59 l
781.84 888.281 l
785.344 891.969 l
788.844 895.66 l
792.348 899.352 l
795.852 903.039 l
799.344 906.738 l
802.848 910.426 l
806.352 914.117 l
809.852 917.809 l
813.355 921.496 l
816.859 925.188 l
820.359 928.879 l
823.863 932.566 l
827.363 936.258 l
830.867 939.949 l
834.371 943.637 l
837.871 947.328 l
841.375 951.016 l
844.879 954.707 l
848.379 958.398 l
851.875 962.086 l
855.379 965.777 l
858.879 969.469 l
862.383 973.156 l
865.887 976.848 l
869.387 980.539 l
872.891 984.227 l
876.391 987.918 l
S
876.391 987.918 m
879.895 991.609 l
883.398 995.297 l
886.898 998.988 l
890.402 1002.68 l
893.906 1006.37 l
897.406 1010.06 l
900.91 1013.75 l
904.414 1017.44 l
907.906 1021.13 l
911.41 1024.82 l
914.914 1028.51 l
918.414 1032.2 l
921.918 1035.89 l
925.422 1039.59 l
928.922 1043.27 l
932.426 1046.96 l
935.926 1050.66 l
939.43 1054.34 l
942.934 1058.04 l
946.434 1061.73 l
949.938 1065.41 l
953.441 1069.11 l
956.941 1072.8 l
960.438 1076.48 l
963.941 1080.18 l
967.441 1083.86 l
970.945 1087.55 l
974.449 1091.25 l
977.949 1094.93 l
981.453 1098.63 l
984.957 1102.32 l
988.457 1106 l
991.961 1109.7 l
995.461 1113.39 l
998.965 1117.07 l
1002.47 1120.77 l
1005.97 1124.46 l
1009.47 1128.14 l
1012.97 1131.84 l
1016.47 1135.52 l
1019.97 1139.21 l
1023.48 1142.91 l
1026.98 1146.59 l
1030.48 1150.29 l
1033.98 1153.98 l
1037.48 1157.66 l
1040.99 1161.36 l
1044.49 1165.05 l
1047.99 1168.74 l
S
1047.99 1168.74 m
1051.5 1172.43 l
1055 1176.12 l
1058.5 1179.81 l
1062 1183.5 l
1065.5 1187.19 l
1069 1190.88 l
1072.5 1194.57 l
1076 1198.26 l
1079.51 1201.95 l
1083.01 1205.64 l
1086.51 1209.33 l
1090.02 1213.02 l
1093.52 1216.71 l
1097.02 1220.4 l
1100.52 1224.09 l
1104.02 1227.78 l
1107.53 1231.47 l
1111.03 1235.16 l
1114.53 1238.85 l
1118.03 1242.54 l
1121.53 1246.23 l
1125.03 1249.92 l
1128.54 1253.61 l
1132.04 1257.3 l
1135.54 1260.99 l
1139.04 1264.68 l
1142.55 1268.37 l
1146.05 1272.06 l
1149.55 1275.75 l
1153.05 1279.44 l
1156.55 1283.13 l
1160.06 1286.82 l
1163.56 1290.52 l
1167.06 1294.21 l
1170.56 1297.9 l
1174.06 1301.59 l
1177.56 1305.28 l
1181.07 1308.97 l
1184.57 1312.66 l
1188.07 1316.35 l
1191.57 1316.88 l
1195.07 1316.88 l
1198.58 1316.88 l
1202.08 1316.88 l
1205.58 1316.88 l
1209.09 1316.88 l
1212.59 1316.88 l
1216.09 1316.88 l
1219.59 1316.88 l
S
1219.59 1316.88 m
1391.18 1316.88 l
S
1391.18 1316.88 m
1562.79 1316.88 l
S
1562.79 1316.88 m
1734.39 1316.88 l
S
1734.39 1316.88 m
1905.98 1316.88 l
S
1905.98 1316.88 m
1937.5 1316.88 l
S
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font LFLGQZ+Helvetica
%%EOF
